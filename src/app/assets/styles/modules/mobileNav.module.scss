@use '../layout/colors' as *;
@use '../layout/breakpoints' as *;

.nav {
  grid-column: 2;
  display: flex;
  flex-flow: row nowrap;
  justify-content: space-between;

  &__logo {
    display: flex;
    align-items: center;
    justify-content: center;
  }

  &__links {
    opacity: 0;
  }

  &__inner {
    display: flex;
    flex-flow: row nowrap;
    align-items: center;
    justify-content: flex-end;

    .hamburger {
      &__btn {
        position: absolute;
        top: -100px;

        &:focus ~ .hamburger__icon {
          .hamburger__icon__line {
            &::before {
              transform: translateY(-9px);
            }

            &::after {
              transform: translateY(9px);
            }
          }
        }
      }

      &__icon {
        position: relative;
        padding: 10px;
        cursor: pointer;
        z-index: 1;
        display: none;

        &__line {
          display: block;
          position: relative;
          background: #fff;
          height: 3px;
          width: 30px;
          border-radius: 4px;
          transition: background 0.8s ease;

          &::before,
          &::after {
            content: "";
            position: absolute;
            height: 100%;
            width: 100%;
            border-radius: 4px;
            background: #fff;
            transition: background 0.8s ease;
          }

          &::before {
            transform: translateY(-7px);
          }

          &::after {
            transform: translateY(7px);
          }
        }
      }

      &__icon {
        display: block;
        position: absolute;

        &__line {
          animation: closedMid 0.8s backwards;
          animation-direction: reverse;

          &::before {
            animation: closedTop 0.8s backwards;
            animation-direction: reverse;
          }

          &::after {
            animation: closedBtm 0.8s backwards;
            animation-direction: reverse;
          }
        }
      }

      &__btn:checked ~ .nav__links {
        margin-top: 0;
        padding-left: 0;
        opacity: 1;
        clip-path: circle(100% at center);
        background-color: map-get($pallet, color3);
        top: 0;
        left: 0;
        position: fixed;
        width: 50vw;
        height: 100vh;
        overflow: hidden;
        animation: slideIn .5s forwards;
        display: block;

        .nav__links__list {
          list-style: none;
          margin: 0;
          padding: 0;
          display: flex;
          flex-flow: column;
          height: inherit;
          justify-content: center;
          align-items: center;
        }

        .nav__links__list__link__item {
          color: $white;
          text-decoration: none;
          padding: 1rem 3rem;
          margin: 1rem;
          display: block;
        }

        .nav__links__list__link__current {
          background-color: map-get($pallet, color2);
        }

        .nav__links__list__link {
          opacity: 1;
          transform: translateX(0);
          transition: opacity 0.4s ease-in-out, transform 0.6s cubic-bezier(0.175, 0.885, 0.32, 1.275);

          &:nth-of-type(1) {
            transition-delay: 0.7s;
          }

          &:nth-of-type(2) {
            transition-delay: 0.8s;
          }

        }
      }

      &__btn:checked ~ .hamburger__icon {
        border-radius: 50%;

        &__icon__line {
          background: #fff;
          animation: openMid 0.8s forwards;

          &::before {
            background: #fff;
            animation: openTop 0.8s forwards;
          }

          &::after {
            background: #fff;
            animation: openBtm 0.8s forwards;
          }
        }
      }
    }

  }

  &__links {
    margin-top: 0;
    padding-left: 0;
    opacity: 0;
    background-color: map-get($pallet, color3);
    top: 0;
    left: 0;
    position: fixed;
    width: 0;
    height: 100vh;
    overflow: hidden;
    display: block;

    &__list {
      list-style: none;
      margin: 0;
      padding: 0;
      display: flex;
      flex-flow: column;
      height: inherit;
      justify-content: center;
      align-items: center;

      &__link {
        opacity: 1;
        transform: translateX(0);
        transition: opacity 0.4s ease-in-out, transform 0.6s cubic-bezier(0.175, 0.885, 0.32, 1.275);

        &:nth-of-type(1) {
          transition-delay: 0.7s;
        }

        &:nth-of-type(2) {
          transition-delay: 0.8s;
        }

        &__item {
          color: $white;
          text-decoration: none;
          padding: 1rem 3rem;
          margin: 1rem;
          display: block;
        }

        &__current {
          background-color: map-get($pallet, color2);
        }
      }
    }

  }

  &__checked {
    animation: slideOut .5s;
  }
}

@keyframes slideIn {
  from {
    opacity: 0;
    width: 0;
  }

  to {
    opacity: 1;
    width: 50vw;
  }

}

@keyframes slideOut {
  from {
    width: 50vw;
    opacity: 1;
  }

  to {
    width: 0;
    opacity: 0;
  }
}

@keyframes pulse {
  from {
    box-shadow: 0 0 0 0px rgba(255, 255, 255, 0.6);
    background: rgba(255, 255, 255, 0.6);
  }
  to {
    box-shadow: 0 0 0 1000px rgba(255, 255, 255, 0);
    background: rgba(255, 255, 255, 0);
  }
}

@keyframes openTop {
  0% {
    transform: translateY(-5px) rotate(0deg);
  }
  50% {
    transform: translateY(0px) rotate(0deg);
  }
  100% {
    transform: translateY(0px) rotate(90deg);
  }
}

@keyframes closedTop {
  0% {
    transform: translateY(-5px) rotate(0deg);
  }
  50% {
    transform: translateY(0px) rotate(0deg);
  }
  100% {
    transform: translateY(0px) rotate(90deg);
  }
}

@keyframes openMid {
  50% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(45deg);
  }
}

@keyframes closedMid {
  50% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(45deg);
  }
}

@keyframes openBtm {
  0% {
    transform: translateY(5px) rotate(0deg);
  }
  50% {
    transform: translateY(0px) rotate(0deg);
  }
  100% {
    transform: translateY(0px) rotate(90deg);
  }
}

@keyframes closedBtm {
  0% {
    transform: translateY(5px) rotate(0deg);
  }
  50% {
    transform: translateY(0px) rotate(0deg);
  }
  100% {
    transform: translateY(0px) rotate(90deg);
  }
}